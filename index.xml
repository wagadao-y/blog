<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wagadao-y's Blog</title><link>https://wagadao-y.github.io/blog/</link><description>Recent content on wagadao-y's Blog</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 14 Jan 2024 16:53:47 +0900</lastBuildDate><atom:link href="https://wagadao-y.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>[AWS IoT Core] Node.js + MQTT.jsで接続してみる</title><link>https://wagadao-y.github.io/blog/posts/2024-01-14/</link><pubDate>Sun, 14 Jan 2024 16:53:47 +0900</pubDate><guid>https://wagadao-y.github.io/blog/posts/2024-01-14/</guid><description>前回はPythonのPahoでIoT Coreに接続しましたので、今回はNode.js + MQTT.jsを使って接続してみます。
実行環境 OS : Windows 11 Home 23H2
Node.js : v20.10.0
MQTT.js : 5.3.4
AWS側の設定 前回と同じなので省略
PahoでIoT Coreに接続する 下記を参考にIoT Coreに接続してみます。
Use AWS IoT Core MQTT broker with standard MQTT libraries
MQTT.jsのリポジトリ
作成したスクリプトは下記です。
https://github.com/wagadao-y/aws-iotcore-experiment-mqttjs
AWS IoTコンソールのMQTTテストクライアントでMyPC/test-topicをサブスクライブします。
スクリプトを実行して、テストクライアントでメッセージ送受信できることを確認します。
&amp;gt; npm install &amp;gt; node index.js &amp;#34;xxxxxxxxxx-ats.iot.ap-northeast-1.amazonaws.com&amp;#34; Connected Received MyPC/test-topic {&amp;#34;message&amp;#34;:&amp;#34;Hello from MyPC MQTT.js&amp;#34;} Received MyPC/test-topic {&amp;#34;message&amp;#34;:&amp;#34;Hello from MyPC MQTT.js&amp;#34;} Received MyPC/test-topic {&amp;#34;message&amp;#34;:&amp;#34;Hello from MyPC MQTT.js&amp;#34;} Received MyPC/test-topic { &amp;#34;message&amp;#34;: &amp;#34;Hello from AWS IoT console&amp;#34; }</description></item><item><title>[AWS IoT Core] Pythonのpaho-mqttで接続してみる</title><link>https://wagadao-y.github.io/blog/posts/2024-01-13/</link><pubDate>Sat, 13 Jan 2024 15:37:48 +0900</pubDate><guid>https://wagadao-y.github.io/blog/posts/2024-01-13/</guid><description>AWS IoT CoreはIoTデバイスをAWSクラウドに接続するためのサービスです。
PythonからIoT Coreに接続するための方法として、AWS IoT Device SDK for Python が提供されていますが、今回はPCからPythonのpaho-mqttを使って接続してみます。
実行環境 OS : Windows 11 Home 23H2
Python : 3.10.11
paho-mqtt : 1.6.1
AWS側の設定 まずはAWS IoTリソースの作成に従って、AWS側を設定していきます。
AWS IoTコンソールの「デバイスの接続」から作成しても良いですが、ドキュメントに従って進めます。
ポリシーの作成 こんな感じでMyPC-Iot_Policyポリシーを作成。 ${iot:Connection.Thing.ThingName}はポリシー変数で紐づけたモノの名前として評価されるようです。
subscribeにはtopicfilterを設定しました（topic指定では動かなかった）
{ &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;, &amp;#34;Statement&amp;#34;: [ { &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Action&amp;#34;: &amp;#34;iot:Connect&amp;#34;, &amp;#34;Resource&amp;#34;: &amp;#34;arn:aws:iot:ap-northeast-1:584353810655:client/${iot:Connection.Thing.ThingName}&amp;#34; }, { &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Action&amp;#34;: [ &amp;#34;iot:Publish&amp;#34;, &amp;#34;iot:Receive&amp;#34; ], &amp;#34;Resource&amp;#34;: &amp;#34;arn:aws:iot:ap-northeast-1:584353810655:topic/${iot:Connection.Thing.ThingName}*&amp;#34; }, { &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Action&amp;#34;: &amp;#34;iot:Subscribe&amp;#34;, &amp;#34;Resource&amp;#34;: &amp;#34;arn:aws:iot:ap-northeast-1:584353810655:topicfilter/${iot:Connection.Thing.ThingName}*&amp;#34; } ] } モノの作成 モノの名前をMyPC、証明書は「新しい証明書を自動生成する (推奨)」を選択し、MyPC-Iot_Policyポリシーにアタッチ。</description></item></channel></rss>